<?php

/**
 * @file
 * Read nodes in a variety of vocies and, separately, languages/accents.
 */

/**
 * Implements hook_help().
 */
function webspeech_tts_help($path, $arg) {
  switch ($path) {
    case 'admin/help#webspeech_tts':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Webspeech TTS module allows users with the <em>Administer site configuration</em> permission to quickly and easily change voices and languages(accents) associated with content in a node.  Like the API itself, it is experimental and not intended for enterprise usage.  Clear both the Drupal AND browser cache frequently when testing. </p>');
      $output .= '<h3>' . t('How to use') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Enabling on a node') . '</dt>';
      $output .= '<dd>' . t("You may enable WebspeechTTS on a node in edit mode in the 'WebspeechTTS' tab. In order to place the Play-Pause-Cancel buttons adjancent to the node, locate the 'WebspeechTTS' block.") . '</dd>';
      $output .= '</dl>';
      return $output;
  }
}

drupal_static_reset('sites/all/modules/custom/webspeech_tts/webspeech_tts.js?v=1');

/**
 * Implements hook_menu().
 */
function webspeech_tts_menu() {
  $items = array();
  $items['node/%/webspeech_tts'] = array(
    'title' => 'Webspeech TTS for Chrome',
    'description' => 'Option to Read Node Content Out Loud',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('webspeech_tts_form'),
  );
  $items['admin/config/content/webspeech_tts'] = array(
    'title' => 'Webspeech TTS for Chrome',
    'description' => 'Administer Webspeech TTS',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('webspeech_tts_admin_settings_form'),
    'access arguments' => array('administer webspeech_tts settings'),
    'file' => 'webspeech_tts.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_form().
 */
function webspeech_tts_form($form, &$form_state) {
  $tts_lang_only = variable_get('webspeech_tts_lang_only');
  $tts_voice = variable_get('webspeech_tts_voice');
  $tts_vol = variable_get('webspeech_tts_volume', 'volume');
  $tts_rate = variable_get('webspeech_tts_rate', 'rate');
  $tts_pitch = variable_get('webspeech_tts_pitch', 'pitch');
  drupal_add_js(array('webspeech_tts' => array('tts_lang_only_js' => $tts_lang_only)), 'setting');
  drupal_add_js(array('webspeech_tts' => array('tts_voice_js' => $tts_voice)), 'setting');
  drupal_add_js(array('webspeech_tts' => array('tts_volume_js' => $tts_vol)), 'setting');
  drupal_add_js(array('webspeech_tts' => array('tts_rate_js' => $tts_rate)), 'setting');
  drupal_add_js(array('webspeech_tts' => array('tts_pitch_js' => $tts_pitch)), 'setting');
  $path_args = explode('/', current_path());
  $node = node_load((int) $path_args[1]);
  $node_content_to_js = $node->body[LANGUAGE_NONE][0]['value'];
  drupal_static_reset('sites/all/modules/custom/webspeech_tts/webspeech_tts.js?v=1');
  drupal_add_js(array('webspeech_tts' => array('proof_of_concept' => $node_content_to_js)), 'setting');
  drupal_add_js('sites/all/modules/custom/webspeech_tts/webspeech_tts.js?v=1');
  print '<pre>';
  print '</pre>';
  $form['read_text'] = array(
    '#type' => 'submit',
    '#value' => t('Read Text Aloud'),
    '#action' => url('#'),
    '#id' => 'read_text',
    '#attributes' => array('onclick' => 'return (false);'),
  );

  $form['pause_button'] = array(
    '#type' => 'button',
    '#value' => t('Pause'),
    '#action' => url('#'),
    '#id' => 'pause_button',
    '#attributes' => array('onclick' => 'return (false);'),
  );
  $form['cancel_button'] = array(
    '#type' => 'button',
    '#value' => t('Cancel'),
    '#action' => url('#'),
    '#id' => 'cancel_button',
    '#attributes' => array('onclick' => 'return (false);'),
  );
  return $form;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function webspeech_tts_form_node_form_alter(&$form, $form_state) {
  $node = $form['#node'];
  $types = variable_get('webspeech_tts_types', array());
  if (!empty($types[$node->type]) && user_access('administer webspeech_tts settings')) {
    $form['webspeech_tts'] = array(
      '#title' => t('webspeech_tts'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#group' => 'additional_settings',
    );
    $form['webspeech_tts']['webspeech_tts_enabled'] = array(
      '#title' => t('Enable WebspeechTTS'),
      '#type' => 'checkbox',
      '#default_value' => isset($node->webspeech_tts_enabled) ?
      $node->webspeech_tts_enabled : FALSE,
    );
  }
}

/**
 * Implements hook_VERB_node_enabled().
 */
function webspeech_tts_get_node_enabled($nid) {
  if (is_numeric($nid)) {
    $result = db_query("SELECT nid FROM {webspeech_tts_enabled}
      WHERE nid = :nid", array('nid' => $nid))->fetchField();
    if ($result) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Implements hook_VERB_node_enabled().
 */
function webspeech_tts_set_node_enabled($nid) {
  if (is_numeric($nid) & !webspeech_tts_get_node_enabled($nid)) {
    db_insert('webspeech_tts_enabled')
      ->fields(array('nid' => $nid))
      ->execute();
  }
}

/**
 * Implements hook_VERB_node_enabled().
 */
function webspeech_tts_delete_node_enabled($nid) {
  if (is_numeric($nid)) {
    db_delete('webspeech_tts_enabled')
      ->condition('nid', $nid)
      ->execute();
  }
}

/**
 * Implements hook_node_load().
 */
function webspeech_tts_node_load($nodes, $types) {
  foreach ($nodes as $nid => $node) {
    $node->webspeech_tts_enabled = webspeech_tts_get_node_enabled($node->nid);
  }
}

/**
 * Implements hook_node_insert().
 */
function webspeech_tts_node_insert($node) {
  if ($node->webspeech_tts_enabled) {
    webspeech_tts_set_node_enabled($node->nid);
  }
}

/**
 * Implements hook_node_update().
 */
function webspeech_tts_node_update($node) {
  webspeech_tts_delete_node_enabled($node->nid);
  if ($node->webspeech_tts_enabled) {
    webspeech_tts_set_node_enabled($node->nid);
  }
}

/**
 * Implements hook_node_delete().
 */
function webspeech_tts_node_delete($node) {
  webspeech_tts_delete_node_enabled($node->nid);
}

/**
 * Implements hook_access_tab().
 */
function webspeech_tts_access_tab($permission, $nid) {
  return webspeech_tts_get_node_enabled($nid) && user_access($permission);
}

/* Conditional to toggle voices and languages which are incompatible. */
$the_switch = variable_get('webspeech_tts_voice_or_lang_only');
if ($the_switch == 'voice') {
  variable_set('webspeech_tts_lang_only', 'en-US');
}
else {
  if ($the_switch == 'lang_only') {
    variable_set('webspeech_tts_voice', '0');
  }
}

/**
 * Implements hook_block_info().
 */
function webspeech_tts_block_info() {
  $blocks = array();
  $blocks['webspeech_tts'] = array(
    'info' => t('Webspeech TTS'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function webspeech_tts_block_view($delta = '') {
  switch ($delta) {
    case 'webspeech_tts':
      if (arg(0) == 'node' && is_numeric(arg(1)) && webspeech_tts_get_node_enabled(arg(1))) {
        $nid = arg(1);

        $form = drupal_get_form('webspeech_tts_form');

        $block = array(
          'content' => theme('webspeech_tts_block', array('form' => drupal_render($form))),
        );
        return $block;
      }
      break;
  }
}

/**
 * Implements hook_theme().
 */
function webspeech_tts_theme() {
  $theme = array();
  $theme['webspeech_tts_block'] = array(
    'variables' => array(
      'form' => '',
    ),
    'template' => 'webspeech_tts-block',
  );
  return $theme;
}

/**
 * Implements hook_permission().
 */
function webspeech_tts_permission() {
  return array(
    'administer Webspeech TTS' => array(
      'title' => t('Administer Webspeech TTS'),
      'description' => t('Perform administration tasks for Webspeech TTS.'),
    ),
  );
}
