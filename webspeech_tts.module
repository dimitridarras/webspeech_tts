<?php

/**
 * @file
 * TTS (Text-to-Speech) to hear Content
 *
 * Use TTS (Text-to-Speech) to hear Content on a Node with Chome using Voice Elements by Zenorocha
 *
 *  In content type "Display Settings" add a checkbox for TTS
 *  Prepend the node body with a unique ID For JavaScript
 *  Find parameters for Webspeech API
 *  Load JS
 *  http://drupal.stackexchange.com/questions/14743/how-to-retrive-menu-get-object-in-javascript-jquery
 *  http://drupal.stackexchange.com/questions/87598/fire-javascript-on-a-form-submit
 *  Find a means of triggering JavaScript that reads contents of a node
 *  Set and pass parameters to custom JS for reading a node
 *  Update help and perms if necessary
 *  Determine if it makes sense to bundle JS with Module or Use Libraries
 *  Test on others
 *  Create a Sandbox project/Git Repo for project
 */

/**
 * Implements hook_help().
 */

function webspeech_tts_menu() {
  $items['webspeech_tts'] = array(
    'title' => t('JS Module Test'),
    'description' => t('Sending and Receiving JS and PHP Vars'),
    'type' => MENU_CALLBACK,
    'page callback' => 'webspeech_tts_cb',
    'page arguments' => array('webspeech_tts_configuration_form'),
    'access arguments' => array('administer webspeech_tts'),
    /*callback for the admin rendering*/
    'access callback' => TRUE,
  );
  /* situate the page under "structure"  in the menu for now...*/
  $items['admin/structure/webspeech_tts'] = array(
    'title' => 'webspeech_tts',
    'description' => 'Toggle a DIV with JS and PHP',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('webspeech_tts_admin'),
    'access arguments' => array('administer webspeech_tts'),
    //'file' => 'includes/webspeech_tts.inc',
  );

  return $items;
}

/**
 * Display help and module information
 * @param path which path of the site we're displaying help
 * @param arg array that holds the current path as would be returned from arg() function
 * @return help text for the path
 */

function webspeech_tts_help($path, $arg) {
  $output = '';  //declare your output variable
  switch ($path) {
    case "admin/help#webspeech_tts":
      $output = '<p>'.  t("Click a button to hear the Node contoent") .'</p>';
      break;
  }
  return $output;
} 

/**
 * Page callback for /change_divw.
 */

function webspeech_tts_cb() {
  $content = array();
  $content['raw_markup'] = array(
    '#type' => 'markup',
    '#markup' => 'Testing',
    /*set the div as variable here*/
   '#markup'=> '<div style="width:100px;height:100px;background-color:blue" id="change_me";></div>',
  );  


  drupal_set_message("foo" );


  //http://drupal.stackexchange.com/questions/32931/how-do-you-properly-render-the-body-when-pulling-it-from-the-database-using-db-s/32934#32934

// Get an entity (node in this case).
$node = node_load(1);

// Get the view for the body field
$view = field_view_field('node', $node, 'body');

//$text = check_markup($body_value, $body_format);

//drupal_set_message($view);
drupal_set_message($node->body['und'][0]['value']);

 print '<pre>';
  var_dump(get_defined_vars()); 
  print '</pre>';

  return $content; 

}


/*function webspeech_tts_preprocess_webform_form(&$vars){
  drupal_set_message("made it" );
  $node = node_load($node_id);
  drupal_set_message($node->body['und'][0]['value']);
}*/

  //$node = node_load($node_id);
  //echo $node->body['und'][0]['value']


  //$node = $variables['node'];



/**
 * Implements hook_permission().
 */

function webspeech_tts_permission() {
  return array(
    'administer webspeech_tts' => array(
      'title' => t('Administer webspeech_tts'),
      'description' => t('Change the settings for how webspeech_tts behaves on the site.'),
    ),
  );
}

 /**
 * This is the main configuration form for the admin page.
 */
 
function webspeech_tts_admin() {
  $form = array();
  $form['webspeech_tts_opts'] = array(
  '#type' => 'select',
  '#title' => t('dv'),
  '#description' => t("DIV Color Radio Button"),
  '#values' => array( 0 => 'B', 1 => 'Y', 2 => 'G'),
  '#options' => array(
    'Red' => t("Red"),
    'Blue' => t("Blue"), 
    'Green' => t("Green"),
));

  $form['#submit'][] = 'webspeech_tts_form_submit';
  return system_settings_form($form);

}

function webspeech_tts_form_submit($form, &$form_state) {
  
  drupal_set_message(t('The form has been submitted!!!'));
  drupal_set_message(t('Here is the value '.$form_state['values']['webspeech_tts_opts']));
  $stored_val=$form_state['values']['webspeech_tts_opts'];
  drupal_set_message(t($stored_val));
 } 


  